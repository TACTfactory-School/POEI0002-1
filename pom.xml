<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.0.RELEASE</version>
    <relativePath /> <!-- lookup parent from repository -->
  </parent>

  <groupId>fr.dta.ovg</groupId>
  <artifactId>ovg</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <description>Demo project for OVG Spring Boot</description>
  <name>OVG Application</name>
  <!-- FIXME change it to the project's website -->
  <!-- <url>http://www.ovg.fr</url> -->

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <start-class>fr.dta.ovg.Application</start-class>
  </properties>

<!-- ==================== DEPENDANCIES ==================== -->
  <dependencies>
      <!-- ________________ Javax Interceptor ________________ -->
      <!-- Try to fix : class file for javax.interceptor.InterceptorBinding not found. -->
    <dependency>
      <groupId>javax.interceptor</groupId>
      <artifactId>javax.interceptor-api</artifactId>
      <version>1.2</version>
    </dependency>
    <!-- ________________ jUnit ________________ -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version><!--$NO-MVN-MAN-VER$-->
      <scope>test</scope>
    </dependency>

    <!-- ________________ mySQL ________________ -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.18</version><!--$NO-MVN-MAN-VER$-->
    </dependency>

    <!-- ____tomcat______ Spring _____jpa________ -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- ________________ h2 DB ________________ -->

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- ________________ Java Faker ________________ -->
    <!-- Config @see : https://github.com/DiUS/java-faker -->
    <dependency>
      <groupId>com.github.javafaker</groupId>
      <artifactId>javafaker</artifactId>
      <version>1.0.1</version>
    </dependency>

    <!-- ________________ Swagger ________________ -->
    <!-- Config @see : https://www.baeldung.com/swagger-2-documentation-for-spring-rest-api -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.9.2</version>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.9.2</version>
    </dependency>

    <!-- ________________ Model Mapper ________________ -->
    <dependency>
      <groupId>org.modelmapper.extensions</groupId>
      <artifactId>modelmapper-jackson</artifactId>
      <version>2.3.0</version>
    </dependency>

    <!-- ________________ Spring Session ________________ -->
    <!-- https://mvnrepository.com/artifact/org.springframework.session/spring-session -->
    <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session-jdbc</artifactId>
      <version>2.2.0.RELEASE</version><!--$NO-MVN-MAN-VER$-->
    </dependency>

    <!-- ________________ Spring Starter Security ________________ -->
  <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <version>2.2.0.RELEASE</version><!--$NO-MVN-MAN-VER$-->
    </dependency>

      <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-junit -->
    <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-junit</artifactId>
        <version>2.0.0.0</version>
        <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
<!-- ==================== EXCLUDE PATH ==================== -->

<!-- The good way to exclude folder/package from Maven & Jenkins build -->
<!--   <resources> -->
<!--     <resource> -->
<!--       <directory>src/main/java</directory> -->
<!--       <excludes> -->
<!--         <exclude>src/main/java/fr/dta/ovg/aexamples</exclude> -->
<!--       </excludes> -->
<!--     </resource> -->
<!--   </resources> -->

<!-- ==================== PLUGINS ==================== -->
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
<!-- ________________ Maven ________________ -->

        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
        </plugin>
<!-- ________________ Jenkins jacoco ________________ -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.5</version>
        </plugin>
<!-- ________________ Jenkins Spotbugs ________________ -->
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>3.1.12.2</version>
        </plugin>

<!-- ________________ Jenkins Javadoc ________________ -->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-javadoc-plugin</artifactId>
         <version>3.1.1</version>
         <configuration>
            <failOnError>false</failOnError>
         </configuration>
       </plugin>

<!-- ________________ Jenkins PMD/CPD ________________ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.12.0</version>
      </plugin>

<!-- ________________ Jenkins CheckStyle ________________ -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
            <configLocation>checkstyle.xml</configLocation>
        </configuration>
      </plugin>

      </plugins>
    </pluginManagement>
  </build>
</project>
